version: 2.1

orbs:
  android: circleci/android@0.2.1

# Job prefix "d-" -> develop jobs
# Job prefix "r-" -> release jobs
jobs:
  d-build:
    executor: android/android
#    steps:
#      - checkout
#      - run:
#          name: Build
#          command: ./gradlew build
#      - store_artifacts:
#          path: app/build/outputs/apk/debug/app-debug.apk
    steps:
      - run:
          name: Build debug APK and release APK
          command: |
            ./gradlew :app:assembleDebug
      - run:
          name: Store Google Service Account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run:
          name: Authorize gcloud and set config defaults
          command: |
            sudo gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
      - run:
          name: Test with Firebase Test Lab
          command: >
            sudo gcloud firebase test android run \
              --app <local_server_path>/<app_apk>.apk \
              --test <local_server_path>/<app_test_apk>.apk \
              --results-bucket cloud-test-${GOOGLE_PROJECT_ID}

  d-test:
    executor: android/android
#    steps:
#      - run:
#          name: Build debug APK and release APK
#          command: |
#            ./gradlew :app:assembleDebug
#      - run:
#          name: Store Google Service Account
#          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
#      - run:
#          name: Authorize gcloud and set config defaults
#          command: |
#            sudo gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
#            sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
#      - run:
#          name: Test with Firebase Test Lab
#          command: >
#            sudo gcloud firebase test android run \
#              --app <local_server_path>/<app_apk>.apk \
#              --test <local_server_path>/<app_test_apk>.apk \
#              --results-bucket cloud-test-${GOOGLE_PROJECT_ID}
#      - checkout
#      - run:
#          name: Unit Tests
#          command: ./gradlew testDebugUnitTest
#      - store_artifacts:
#          path: app/build/reports/tests/
#      - store_test_results:
#          path: app/build/test-results


  r-build:
    executor: android/android
    steps:
      - checkout
      - run:
          name: Build And Deploy
          command: ./gradlew :app:assembleRelease
      - store_artifacts:
          path: app/build/outputs/apk/release/app-releaseq.apk

  r-fastlane-deploy:
    executor: android/android
    steps:
      - checkout
      - run:
          name: Install fastlane
          command: bundle install
      - run:
          name: Execute fastlane
          command: bundle exec fastlane playstore

workflows:
  build-test:
    jobs:
      - d-build:
          filters:
            branches:
              ignore:
                - master
      - d-test:
          requires:
            - d-build
          filters:
            branches:
              ignore:
                - master
      - r-fastlane-deploy:
          filters:
            branches:
              only:
                - master
